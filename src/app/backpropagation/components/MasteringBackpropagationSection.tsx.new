import { motion } from "framer-motion";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";

const containerVariants = {
  hidden: { opacity: 0 },
  visible: {
    opacity: 1,
    transition: {
      duration: 0.6,
      staggerChildren: 0.15,
    },
  },
};

const itemVariants = {
  hidden: { opacity: 0, y: 20 },
  visible: {
    opacity: 1,
    y: 0,
    transition: { duration: 0.5 },
  },
};

export default function MasteringBackpropagationSection() {
  const concepts = [
    {
      badge: "Mathematical Foundation",
      badgeClass: "bg-blue-100 text-blue-800 border-blue-200",
      text: "Chain rule enables systematic computation of gradients through composite functions in neural networks.",
    },
    {
      badge: "Efficient Algorithm",
      badgeClass: "bg-yellow-100 text-yellow-800 border-yellow-200",
      text: "Backpropagation computes all gradients in a single backward pass, making training computationally efficient.",
    },
    {
      badge: "Scalable Solution",
      badgeClass: "bg-green-100 text-green-800 border-green-200",
      text: "The algorithm scales to networks of any size and complexity, enabling deep learning applications.",
    },
    {
      badge: "Universal Method",
      badgeClass: "bg-purple-100 text-purple-800 border-purple-200",
      text: "Backpropagation is the foundation for training virtually all modern neural network architectures.",
    },
  ];

  return (
    <motion.section
      initial="hidden"
      animate="visible"
      variants={containerVariants}
    >
      <motion.div variants={itemVariants}>
        <Card className="overflow-hidden shadow-lg">
          <motion.div
            className="bg-gradient-to-r from-indigo-600 to-blue-600"
            animate={{
              background: [
                "linear-gradient(to right, rgb(79, 70, 229), rgb(37, 99, 235))",
                "linear-gradient(to right, rgb(37, 99, 235), rgb(79, 70, 229))",
                "linear-gradient(to right, rgb(79, 70, 229), rgb(37, 99, 235))"
              ]
            }}
            transition={{
              duration: 3,
              repeat: Infinity,
              ease: "linear"
            }}
          >
            <CardHeader className="text-white">
              <motion.div
                initial={{ y: -20, opacity: 0 }}
                animate={{ y: 0, opacity: 1 }}
                transition={{ delay: 0.2, duration: 0.5 }}
              >
                <CardTitle className="text-center text-lg sm:text-xl font-bold">
                  Mastering Backpropagation
                </CardTitle>
              </motion.div>
            </CardHeader>
          </motion.div>
          <CardContent>
            <motion.div
              className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6"
              variants={containerVariants}
            >
              {concepts.map((item, idx) => (
                <motion.div
                  key={item.badge}
                  variants={itemVariants}
                  className="flex flex-col items-center p-4 bg-white rounded-xl border border-gray-200 shadow-sm"
                  whileHover={{
                    scale: 1.05,
                    boxShadow: "0 8px 32px rgba(0,0,0,0.12)",
                  }}
                  whileTap={{ scale: 0.95 }}
                  transition={{
                    type: "spring",
                    stiffness: 300,
                    damping: 20
                  }}
                >
                  <motion.div
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: idx * 0.1 }}
                  >
                    <Badge
                      className={
                        item.badgeClass + " mb-3 px-4 py-2 text-sm font-medium"
                      }
                    >
                      {item.badge}
                    </Badge>
                  </motion.div>
                  <motion.p
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    transition={{ delay: idx * 0.1 + 0.2 }}
                    className="text-center text-sm sm:text-base text-gray-700"
                  >
                    {item.text}
                  </motion.p>
                </motion.div>
              ))}
            </motion.div>
          </CardContent>
        </Card>
      </motion.div>
    </motion.section>
  );
}
